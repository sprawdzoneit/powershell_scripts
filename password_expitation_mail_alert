# importing the AD module
Import-Module ActiveDirectory

# current date
$currentDate = Get-Date

# CSS format for html content
$htmlhead = @"
<style>

    h1 {

        font-family: Arial, Helvetica, sans-serif;
        text-transform: uppercase;
        color: black;
        font-size: 28px;

    } 


    h2 {

        font-family: Arial, Helvetica, sans-serif;
        text-transform: uppercase;
        color: grey;
        font-size: 16px;

    }

    h3 {

        font-family: Arial, Helvetica, sans-serif;
        text-transform: uppercase;
        color: black;
        font-size: 12px;

    }

    h4 {

        font-family: Arial, Helvetica, sans-serif;
        text-transform: uppercase;
        color: red;
        font-size: 12px;

    }

    p {

        font-family: Arial, Helvetica, sans-serif;
        text-transform: uppercase;
        color: black;
        font-size: 8px;

    }
    
    
   table {
		font-size: 12px;
        color: grey;
		border: 0px; 
		font-family: Arial, Helvetica, sans-serif;
	} 
	
    td {
		padding: 4px;
		margin: 0px;
		border: 0;
	}
	
    th {
        background: #395870;
        background: grey;
        color: #fff;
        font-size: 11px;
        text-transform: uppercase;
        padding: 10px 15px;
        vertical-align: middle;
	}

    tbody tr:nth-child(even) {
        background: #f0f0f2;
    }


    a:link {
    text-decoration: none;
    color: black;
    }

    a:visited {
    text-decoration: none;
    }

    a:hover {
    text-decoration: underline;
    color: red;
    }

    a:active {
    text-decoration: underline;
    }




</style>

"@


# url to change pwd
$adress = "https://pwd.sprawdzone.it/"
$url = "<a href='$adress'>tutaj</a>"


# days before 
$days = (get-date).adddays(45).ToString("yyyyMMdd")


# mail parameters (settings for Google Workspace)
$mailuser = "alerty@sprawdzone.it"
$smtpserver = "smtp.gmail.com"
$port = "587"

# ask 4 password & encrypt password (uncoment only first time two lines below)
#$pass = Read-Host "Enter your password" â€“AsSecureString
#$pass | ConvertFrom-SecureString | Set-Content "c:\scripts\mail.txt"

$pass = get-content "c:\scripts\mail.txt" | ConvertTo-SecureString 
$credentials=new-object Management.Automation.PSCredential -ArgumentList $mailuser, $pass
$subject = "[alert] your password will expire soon"


# retrieve users whose password will expire in the next $days
$users = Get-ADUser -Filter {Enabled -eq $True -and PasswordNeverExpires -eq $False} -Properties "Name", "sAMAccountName", "EmailAddress", "msDS-UserPasswordExpiryTimeComputed" | Select-Object Name, EmailAddress,sAMAccountName, @{Name='ExpiryDate'; Expression={[datetime]::FromFileTime($_."msDS-UserPasswordExpiryTimeComputed")}} | where-Object {($_.ExpiryDate).ToString("yyyyMMdd") -eq $days}


# for each user, sending an e-mail with a password expiration reminder
foreach ($user in $users) {

#get properties like: emailaddress, name, date etc
$receiver = (Get-ADUser $user.sAMAccountName -Properties "EmailAddress").EmailAddress
$ExpiryDate = ($user.ExpiryDate).ToLongDateString()
$name = (Get-ADUser $user.sAMAccountName -Properties name).name
$raport = ConvertTo-Html -Head $htmlhead -Body "<h1>Attention!</h1><h3>$name Your domain password will expire on:<br><h4>$ExpiryDate</h4><h3>Change your password earlier in order not to lose access to services.<br><br>You can change the password yourself by clicking $url</h3><br><br><br><p>Automatically generated message. Please don't reply!<br><br><br><br></p>" -Title "Password Reminder"

# old temp file check
$oldfile = "C:\scripts\temp\password.html"
if (Test-Path $oldfile) 
{
  Remove-Item $oldfile
}

# generate temp html file
$raport | Out-File $oldfile

# get content from html to mail body
$content = get-content $oldfile | Out-String

# parameters for mail send
$param = @{
    
    SmtpServer = $smtpserver
    Port = $port
    UseSsl = $true
    Credential  = $credentials
    Encoding = 'utf8'
    From = $mailuser
    To = $receiver
    Subject = $subject
    Body = $content
    BodyAsHtml = $true
    
}
 

# send final mail message
Send-MailMessage @param
 
}
